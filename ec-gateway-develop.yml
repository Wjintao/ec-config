spring:
  application:
    name: ec-gateway
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        #healthCheckPath: ${management.contextPath}/health
        #healthCheckInterval: 15s
        #instance-id: ec-order
        enabled: true
    config:
      name: ec-gateway
      profile: develop
      label: master
      discovery:
      #开启通过服务来访问config-server
        enabled: true
        #指定配置中心注册的服务名
        service-id: ec-configcenter
      # true: 如果访问配置中心失败，则停止启动服务
      fail-fast: true
       # 配置重试，默认是重试6次，最初是延迟1s再次重试，如果再失败，则延迟1.1*1s、1.1*1.1*1s、… 。可以使用这个配置
      retry:
        initial-interval: 2000
        # 最多重试次数
        max-attempts: 6
        # 最大重试间隔
        max-interval: 4000
        # 每次重试时间是之前的倍数
        multiplier: 1.2
      uri: http://localhost:5502/
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
      #filter:
        #remove-non-proxy-headers:
        #  headers:
        #  - dummy
      routes:
#        - id:  baidu-route
#          uri: https://www.baidu.com
#          predicates:
#          - Path=/baidu/
        - id:  ec-api
          uri: lb://ec-api
          predicates:
          - Path=/api/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
          #- JwtCheck
          - name: Hystrix
            args:
              name: authHystrixCommand
              fallbackUri: forward:/hystrixTimeout
        - id:  ec-order
          uri: lb://ec-order
          predicates:
          - Path=/order/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-product
          uri: lb://ec-product
          predicates:
          - Path=/product/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-system
          uri: lb://ec-system
          predicates:
          - Path=/system/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-manager
          uri: lb://ec-manager
          predicates:
          - Path=/manager/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
  zipkin:
    base-url: http://localhost:9411
server:
  port: 5504

logging:
  config: classpath:log4j2.xml
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG

#zuul.routes.<serviceId>=<path>，其中<serviceId>用来指定路由的具体服务名，<path>用来配置匹配的请求表达式
#zuul:
#  routes:
#    ec-demo-consumer: /ec-demo-consumer/**
#    ec-demo-provider: /ec-demo-provider/**
#    ec-manager: /ec-manager/**
#    ec-api: /ec-api/**
#    ec-order: /ec-order/**
#    ec-product: /ec-product/**
#    ec-system: /ec-system/**
#    ec-zipkinserver: /ec-zipkinserver/**

