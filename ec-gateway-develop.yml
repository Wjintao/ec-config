server:
  port: 5504
spring:
  application:
    name: ec-gateway
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        #healthCheckPath: ${management.contextPath}/health
        #healthCheckInterval: 15s
        instance-id: ${spring.application.name}:${server.port}
        enabled: true
        service-name: ec-gateway
    config:
      name: ec-gateway
      profile: develop
      label: master
      discovery:
      #开启通过服务来访问config-server
        enabled: true
        #指定配置中心注册的服务名
        service-id: ec-configcenter
      # true: 如果访问配置中心失败，则停止启动服务
      fail-fast: true
       # 配置重试，默认是重试6次，最初是延迟1s再次重试，如果再失败，则延迟1.1*1s、1.1*1.1*1s、… 。可以使用这个配置
      retry:
        initial-interval: 2000
        # 最多重试次数
        max-attempts: 6
        # 最大重试间隔
        max-interval: 4000
        # 每次重试时间是之前的倍数
        multiplier: 1.2
      uri: http://localhost:5502/
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
        - TraceIdFilter
      routes:
        - id:  ec-api
          uri: lb://ec-api
          predicates:
          - Path=/api/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
          #jwt校验
          #- JwtCheck
          #熔断
          #- name: Hystrix
          #  args:
          #    name: authHystrixCommand
          #    fallbackUri: forward:/hystrixTimeout
          #限流
          #- name: RequestRateLimiter
          #  args:
          #    redis-rate-limiter.replenishRate: 10 #速度
          #    redis-rate-limiter.burstCapacity: 20 #令牌桶容量
          #    key-resolver: "#{@ipKeyResolver}" #使用SpEL按名称引用bean
        - id:  ec-order
          uri: lb://ec-order
          predicates:
          - Path=/order/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-product
          uri: lb://ec-product
          predicates:
          - Path=/product/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-system
          uri: lb://ec-system
          predicates:
          - Path=/system/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
        - id:  ec-manager
          uri: lb://ec-manager
          predicates:
          - Path=/manager/**
          filters:
          - SwaggerHeaderFilter
          - StripPrefix=1
    bus:
      trace:
        enabled: true
      enabled: true
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
  zipkin:
    sender:
      type: kafka
    #base-url: http://localhost:9411/ # 指定了 Zipkin 服务器的地址
#用http://Ip:port/actuator/bus-refresh 触发消息总线刷新配置
  rabbitmq:
    host: 10.250.0.67
    port: 5672
    username: cmcc_test
    password: cmcc_test
  kafka:
    bootstrap-servers: 10.250.0.67:9092

management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    servlet:
      context-path: /
    ssl:
      enabled: false
  endpoint:
    health:
      show-details: always
